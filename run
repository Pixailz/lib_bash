#!/bin/bash

## ⚠️ TEST ZONE ⚠️

# function	tui::reset()
# {
# 	stty "${TUI_OLD_TERM}"
# 	trap - SIGINT exit
# 	return
# }

# function	tui::init()
# {
# 	declare -g	TUI_CUR_TERM=$(tty)
# 	declare -g	TUI_OLD_TERM=$(stty -g)
# 	declare -g	TUI_COL=$(tput cols)
# 	declare -g	TUI_ROW=$(tput lines)

# 	stty -icanon -echo
# 	trap "tui::reset" SIGINT exit
# }

# function	create::task()
# {
# 	true
# }

# function	test::entry()
# {
# 	tui::init
# 	printf "test\n" &
# 	printf "test\n" &
# 	tui::reset
# }

function	test::clock()
{
	local	x y
	local	cur_tty="${1:-$(tty)}"
	local	path_cur_pos="/run/"

	while [ : ]; do
		printf "x: %d | y: %d\n" "${CUR_POS_X}" "${CUR_POS_Y}"
		sleep 1
	done
}

function	test::entry()
{
	test::clock "$(tty)" &

	trap "kill $!" 2
	wait $!
}

## ⚠️ END TEST ZONE ⚠️

source ./.config
# parse::entry ${@}
# test::entry

# utils::update_repo "git@github.com:Pixailz/lib_bash" "./"
# utils::update_repo "https://github.com/Pixailz/lib_bash" "./"

ansi::get_cursor_pos

printf "X_POS : %s\n" "${CUR_POS_X}"
printf "Y_POS : %s\n" "${CUR_POS_Y}"
