#!/bin/bash

## ⚠️ TEST ZONE ⚠️

function	pg::new_progress_bar()
{
	# if [ ${#} -eq 0 ]; then
	#     ansi::load "test loading" "6"
	# else
	#     ansi::down "test downloading" "0" "6"
	# fi

	local	tts=${1:-0.01}
	local	index=0

	ansi::print "?25l"
	trap "ansi::print '?25h'; stty -F ${CURR_TERM} echo; exit" SIGINT
	stty -F ${CURR_TERM} -echo
	printf "%b" "${PB_COLOR}"
	ansi::print "2K"
	while true; do
		printf "%b" "${PG_SPLIT}"
		ansi::print "1D"
		sleep "${tts}"
		printf "%b" "${PG_FULL}"
		sleep "${tts}"
		((index++))
		[ "${index}" -eq "${PB_LEN}" ] && break
	done
	ansi::print "0G"
	printf "%b" "${G}"
	printf -- "${PG_FULL}%.0s" $(seq 1 ${PB_LEN})
	printf "%b\n" "${RST}"
	ansi::print "?25h"
	stty -F ${CURR_TERM} echo
	trap - SIGINT
}

# function	dummy::while_loop()
# {
# 	local	dot="."

# 	while [ true ]; do
# 		ansi::print "u"
# 		printf "hello"
# 		sleep 1
# 	done
# }

function	test::entry()
{
	tui::init
	pg::new_progress_bar &
	tui::worker_add "progress1" ${!}
	pg::new_progress_bar &
	tui::worker_add "progress2" ${!}
	tui::wait_for_worker
}

## ⚠️ END TEST ZONE ⚠️

source ./.config
parse::entry ${@}
test::entry
